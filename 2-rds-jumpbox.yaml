---

# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html

AWSTemplateFormatVersion: 2010-09-09

Mappings:

  RegionConfig:
    ap-southeast-2:
      JumpBoxAmi: ami-0692dea0a2f8a1b35  # Amazon Linux 2 5.10

Parameters:

  NamePrefix:
    Description: A prefix or namespace that can be used for some resources created or accessed by this template.
    Type: String

Resources:

  JumpBoxLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${NamePrefix}-jump-box-launch-template
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvdf
            Ebs:
              DeleteOnTermination: true
              Encrypted: true
              VolumeSize: 20
              VolumeType: gp2
        IamInstanceProfile:
          Name: !Ref JumpBoxInstanceProfile
        ImageId: !FindInMap [RegionConfig, !Ref AWS::Region, JumpBoxAmi]
        InstanceType: t3.micro
        SecurityGroupIds:
          - !Ref JumpBoxSecurityGroup
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub ${NamePrefix}-jump-box
          - ResourceType: volume
            Tags:
              - Key: Name
                Value: !Sub ${NamePrefix}-jump-box
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            set -euo pipefail

            set -x
            yum update --assumeyes
            yum install mysql jq --assumeyes
            set +x

            cat << 'EOF' > /usr/bin/test-rds-proxy
            #!/bin/bash
            set -euo pipefail

            export AWS_DEFAULT_REGION="${AWS::Region}"

            NAME_PREFIX="${NamePrefix}"

            proxy="$(aws rds describe-db-proxies | jq --raw-output ".DBProxies[] | select(.DBProxyName == \"rds-proxy-test-rds-proxy\") | .Endpoint")"
            direct="$(aws rds describe-db-cluster-endpoints | jq --raw-output ".DBClusterEndpoints[] | select(.DBClusterIdentifier == \"${!NAME_PREFIX}-database-cluster\") | select(.EndpointType == \"READER\") | .Endpoint")"

            secret_data="$(aws secretsmanager get-secret-value --secret-id "${!NAME_PREFIX}/rds/admin" | jq --raw-output .SecretString)"
            username="$(echo "${!secret_data}" | jq --raw-output .username)"
            password="$(echo "${!secret_data}" | jq --raw-output .password)"
            dbname="$(echo "${!secret_data}" | jq --raw-output .dbname)"

            function query(){
              endpoint="${!1}"
              query="${!2}"

              echo
              set -x
              mysql --host="${!endpoint}" --user="${!username}" --password="${!password}" "${!dbname}" --execute="${!query}" --verbose --verbose
              { set +x; } 2>/dev/null  # Runs 'set +x' without printing it out.
            }

            # Runs a quick and simple test of database connectivity.
            function main(){
              set +e
              query "${!direct}" "SHOW TABLES"
              query "${!proxy}" "SHOW TABLES"
              query "${!direct}" "SHOW TABLES"
              set -e
            }

            main

            EOF

            chmod +x /usr/bin/test-rds-proxy
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: Name
              Value: !Sub ${NamePrefix}-jump-box

  JumpBoxInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref JumpBoxRole

  JumpBoxRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:

              - Effect: Allow
                Action: rds:Describe*
                Resource: '*'

              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${NamePrefix}/rds/admin-*

  JumpBoxSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${NamePrefix}-jump-box-security-group
      GroupDescription: Jump box security group
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0  # Outbound to anywhere.
      VpcId:
        Fn::ImportValue: !Sub ${NamePrefix}-vpc-id
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-jump-box-security-group

  JumpBoxAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub ${NamePrefix}-jump-box-auto-scaling-group
      DesiredCapacity: 1
      HealthCheckType: EC2
      LaunchTemplate:
        LaunchTemplateId: !Ref JumpBoxLaunchTemplate
        Version: !GetAtt JumpBoxLaunchTemplate.LatestVersionNumber
      MaxSize: 1
      MinSize: 1
      VPCZoneIdentifier:
        - !Select [0, !Split [",", Fn::ImportValue: !Sub "${NamePrefix}-private-subnet-list"]]
        - !Select [1, !Split [",", Fn::ImportValue: !Sub "${NamePrefix}-private-subnet-list"]]
        - !Select [2, !Split [",", Fn::ImportValue: !Sub "${NamePrefix}-private-subnet-list"]]
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: !Sub ${NamePrefix}-jump-box
