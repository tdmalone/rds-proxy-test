---

# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnetgroup.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-alias.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html

AWSTemplateFormatVersion: 2010-09-09

Parameters:

  NamePrefix:
    Description: A prefix or namespace that can be used for some resources created or accessed by this template.
    Type: String

  DatabaseAdminUsername:
    Description: Name of the database admin user.
    Type: String
    Default: admin

  DatabaseProxyUsername:
    Description: Name of the database proxy user.
    Type: String
    Default: proxy

Resources:

  ############
  # Database #
  ############

  DatabaseCluster:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::RDS::DBCluster
    Properties:
      DBClusterIdentifier: !Sub ${NamePrefix}-database-cluster
      BackupRetentionPeriod: 1
      DatabaseName: !Sub ${NamePrefix}
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      EnableCloudwatchLogsExports:
        - audit
        - error
        - general
        - slowquery
      EnableIAMDatabaseAuthentication: true
      Engine: aurora-mysql
      EngineVersion: 8.0.mysql_aurora.3.02.0
      KmsKeyId: !GetAtt DatabaseKmsKey.Arn
      MasterUsername: !Sub "{{resolve:secretsmanager:${DatabaseAdminCredentials}:SecretString:username}}"
      MasterUserPassword: !Sub "{{resolve:secretsmanager:${DatabaseAdminCredentials}:SecretString:password}}"
      ServerlessV2ScalingConfiguration:
        MinCapacity: 2
        MaxCapacity: 5
      StorageEncrypted: true
      VpcSecurityGroupIds:
        - !Ref DatabaseSecurityGroup

  # @see https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html

  DatabaseInstance:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref DatabaseCluster
      CACertificateIdentifier: rds-ca-2019
      DBInstanceClass: db.serverless
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      Engine: aurora-mysql
      EngineVersion: 8.0.mysql_aurora.3.02.0

  ###################
  # Security Groups #
  ###################

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${NamePrefix}-database-security-group
      GroupDescription: Database security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp:
            Fn::ImportValue: !Sub ${NamePrefix}-restricted-subnet-cidr
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp:
            Fn::ImportValue: !Sub ${NamePrefix}-private-subnet-cidr
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 127.0.0.1/32  # Local loopback; no-op rule to replace the default 0.0.0.0/0.
      VpcId:
        Fn::ImportValue: !Sub ${NamePrefix}-vpc-id
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-database-security-group

  #################
  # Subnet Groups #
  #################

  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub ${NamePrefix}-database-subnet-group
      DBSubnetGroupDescription: Database subnet group
      SubnetIds: !Split
        - ","
        - Fn::ImportValue: !Sub "${NamePrefix}-restricted-subnet-list"

  ############
  # KMS Keys #
  ############

  DatabaseKmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub CMK for ${NamePrefix} database
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: root
        Statement:
          - Sid: Delegate to IAM
            Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"

  DatabaseKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${NamePrefix}-database-kms-key
      TargetKeyId: !Ref DatabaseKmsKey

  ###############
  # Credentials #
  ###############

  # Admin

  DatabaseAdminCredentials:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: !Sub Admin credentials for the ${NamePrefix} database.
      GenerateSecretString:
        SecretStringTemplate: !Sub '{ "username": "${DatabaseAdminUsername}" }'
        ExcludePunctuation: true
        ExcludeCharacters: '''"@/\'
        GenerateStringKey: "password"
        PasswordLength: 30
      Name: !Sub ${NamePrefix}/rds/${DatabaseAdminUsername}

  DatabaseAdminCredentialsAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref DatabaseAdminCredentials
      TargetId: !Ref DatabaseCluster
      TargetType: AWS::RDS::DBCluster

  # Proxy

  DatabaseProxyCredentials:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: !Sub RDS Proxy credentials for the ${NamePrefix} database.
      GenerateSecretString:
        SecretStringTemplate: !Sub '{ "username": "${DatabaseProxyUsername}" }'
        ExcludePunctuation: true
        ExcludeCharacters: '''"@/\'
        GenerateStringKey: "password"
        PasswordLength: 30
      Name: !Sub ${NamePrefix}/rds/${DatabaseProxyUsername}

  DatabaseProxyCredentialsAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref DatabaseProxyCredentials
      TargetId: !Ref DatabaseCluster
      TargetType: AWS::RDS::DBCluster

###########
# Outputs #
###########

Outputs:

  DatabaseClusterName:
    Description: Database cluster name
    Export:
      Name: !Sub ${NamePrefix}-database-cluster-name
    Value: !Ref DatabaseCluster

  DatabaseProxyCredentialsArn:
    Description: Secret ARN for database proxy credentials
    Export:
      Name: !Sub ${NamePrefix}-database-proxy-credentials-arn
    Value: !Ref DatabaseProxyCredentials
