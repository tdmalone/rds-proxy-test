---

# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eip.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html

AWSTemplateFormatVersion: 2010-09-09

Mappings:

  AccountConfig:
    test-account:
      VpcCidr: 172.20.0.0/16
      PrivateSubnetCidr: 172.20.0.0/17
      PrivateSubnet1Cidr: 172.20.0.0/19
      PrivateSubnet2Cidr: 172.20.32.0/19
      PrivateSubnet3Cidr: 172.20.64.0/19
      PublicSubnetCidr: 172.20.128.0/18
      PublicSubnet1Cidr: 172.20.128.0/20
      PublicSubnet2Cidr: 172.20.144.0/20
      PublicSubnet3Cidr: 172.20.160.0/20
      RestrictedSubnetCidr: 172.20.192.0/19
      RestrictedSubnet1Cidr: 172.20.192.0/21
      RestrictedSubnet2Cidr: 172.20.200.0/21
      RestrictedSubnet3Cidr: 172.20.208.0/21

Parameters:

  AccountName:
    Description: Account where VPC is to be deployed.
    Type: String
    AllowedValues:
      - test-account
    Default: test-account

  NamePrefix:
    Description: A prefix or namespace that can be used for some resources created or accessed by this template.
    Type: String

Resources:

  #######
  # VPC #
  #######

  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [AccountConfig, !Ref AccountName, VpcCidr]
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-vpc

  ###########
  # Subnets #
  ###########

  RestrictedSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !FindInMap [AccountConfig, !Ref AccountName, RestrictedSubnet1Cidr]
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-restricted-subnet-1

  RestrictedSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [ 1, !GetAZs ]
      CidrBlock: !FindInMap [AccountConfig, !Ref AccountName, RestrictedSubnet2Cidr]
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-restricted-subnet-2

  RestrictedSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [ 2, !GetAZs ]
      CidrBlock: !FindInMap [AccountConfig, !Ref AccountName, RestrictedSubnet3Cidr]
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-restricted-subnet-3

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !FindInMap [AccountConfig, !Ref AccountName, PrivateSubnet1Cidr]
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-private-subnet-1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [ 1, !GetAZs ]
      CidrBlock: !FindInMap [AccountConfig, !Ref AccountName, PrivateSubnet2Cidr]
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-private-subnet-2

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [ 2, !GetAZs ]
      CidrBlock: !FindInMap [AccountConfig, !Ref AccountName, PrivateSubnet3Cidr]
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-private-subnet-3

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !FindInMap [AccountConfig, !Ref AccountName, PublicSubnet1Cidr]
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-public-subnet-1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [ 1, !GetAZs ]
      CidrBlock: !FindInMap [AccountConfig, !Ref AccountName, PublicSubnet2Cidr]
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-public-subnet-2

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 2, !GetAZs ]
      CidrBlock: !FindInMap [AccountConfig, !Ref AccountName, PublicSubnet3Cidr]
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-public-subnet-3

  ###############
  # VpcFlowLogs #
  ###############

  VpcFlowLogsLogGroup:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 3653
      LogGroupName: !Sub ${NamePrefix}-vpc-flow-logs

  VpcFlowLogs:
    Type: AWS::EC2::FlowLog
    Properties:
      DeliverLogsPermissionArn: !GetAtt [VpcFlowLogsRole, Arn]
      LogGroupName: !Ref VpcFlowLogsLogGroup
      ResourceId: !Ref Vpc
      ResourceType: VPC
      TrafficType: ALL

  VpcFlowLogsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                Resource: !Sub arn:${AWS::Partition}:logs:*:*:*

  ################
  # Route Tables #
  ################

  RestrictedRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-restricted-route-table

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-private-route-table

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-public-route-table

  ###################################
  # Internet Gateway / Routes / NAT #
  ###################################

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-igw

  IgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable

  NatGatewayEip:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-nat-gateway-eip

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEip.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-nat-gateway

  PrivateNatRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref PrivateRouteTable

  ######################
  # Route Associations #
  ######################

  RestrictedRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RestrictedRouteTable
      SubnetId: !Ref RestrictedSubnet1

  RestrictedRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RestrictedRouteTable
      SubnetId: !Ref RestrictedSubnet2

  RestrictedRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RestrictedRouteTable
      SubnetId: !Ref RestrictedSubnet3

  PrivateRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1

  PrivateRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2

  PrivateRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet3

  PublicRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PublicRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3

###########
# Outputs #
###########

Outputs:

  VpcId:
    Description: VPC ID
    Export:
      Name: !Sub ${NamePrefix}-vpc-id
    Value: !Ref Vpc

  RestrictedSubnets:
    Description: List of restricted subnet IDs
    Export:
      Name: !Sub ${NamePrefix}-restricted-subnet-list
    Value: !Join
      - ","
      - - Ref: RestrictedSubnet1
        - Ref: RestrictedSubnet2
        - Ref: RestrictedSubnet3

  PrivateSubnets:
    Description: List of private subnet IDs
    Export:
      Name: !Sub ${NamePrefix}-private-subnet-list
    Value: !Join
      - ","
      - - Ref: PrivateSubnet1
        - Ref: PrivateSubnet2
        - Ref: PrivateSubnet3

  PublicSubnets:
    Description: List of public subnet IDs
    Export:
      Name: !Sub ${NamePrefix}-public-subnet-list
    Value: !Join
      - ","
      - - Ref: PublicSubnet1
        - Ref: PublicSubnet2
        - Ref: PublicSubnet3

  RestrictedSubnetCidr:
    Description: Restricted subnets CIDR range
    Export:
      Name: !Sub ${NamePrefix}-restricted-subnet-cidr
    Value: !FindInMap [AccountConfig, !Ref AccountName, RestrictedSubnetCidr]

  PrivateSubnetCidr:
    Description: Private subnets CIDR range
    Export:
      Name: !Sub ${NamePrefix}-private-subnet-cidr
    Value: !FindInMap [AccountConfig, !Ref AccountName, PrivateSubnetCidr]

  PublicSubnetCidr:
    Description: Public subnets CIDR range
    Export:
      Name: !Sub ${NamePrefix}-public-subnet-cidr
    Value: !FindInMap [AccountConfig, !Ref AccountName, PublicSubnetCidr]
